events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # CSS ve JS dosyaları için explicit MIME types
    map $uri $proper_content_type {
        ~\.css$     text/css;
        ~\.js$      application/javascript;
        ~\.mjs$     application/javascript;
        ~\.json$    application/json;
        default     "";
    }

    # Security: Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/m;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Brotli compression (if available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self'; frame-ancestors 'none';" always;

    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Security: Block access to sensitive files
        location ~ /\. {
            deny all;
        }

        location ~ \.(env|log|sql)$ {
            deny all;
        }

        # Handle client-side routing with rate limiting
        location / {
            limit_req zone=general burst=10 nodelay;
            try_files $uri $uri/ /index.html;
        }

        # Favicon handling
        location = /favicon.ico {
            try_files /favicon.webp /favicon.ico =404;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        location = /favicon.webp {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Content-Type "image/webp";
        }

        # CSS dosyaları için özel ayarlar
        location ~* \.css$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # JavaScript dosyaları için özel ayarlar
        location ~* \.(js|mjs)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Cache static assets
        location ~* \.(png|jpg|jpeg|gif|ico|svg|webp|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # Sadece font dosyaları için CORS
            if ($uri ~* \.(woff|woff2|ttf|eot)$) {
                add_header Access-Control-Allow-Origin "*";
            }
        }

        # API routes
        location /api/ {
            limit_req zone=api burst=5 nodelay;
            # Proxy to backend if needed
        }
    }
}
